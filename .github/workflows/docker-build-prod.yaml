name: Build App Container Image for Production (Android)

on:
    push:
        tags:
            - "v*.*.*"
    workflow_dispatch:

jobs:
    build-android-apps:
        name: Build Android Apps
        runs-on: ubuntu-latest
        env:
            ENV_BASE64: ${{ secrets.ENV_BASE64 }}
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Create .env file # Create .env file
              if: env.ENV_BASE64 != ''
              run: echo "$ENV_BASE64" | base64 -d > .env
            - name: Update .env file # Update .env file
              if: env.ENV_BASE64 != ''
              run: echo "VITE_APP_VERSION=${{ github.ref_name }}" >> .env

            - name: Setup Java
              uses: actions/setup-java@v3
              with:
                  distribution: "adopt"
                  java-version: "16"
            # Cypress prepare cache dir
            - name: Prepare Cypress cache dir
              run: |
                  sudo mkdir -p ${{ github.workspace }}/cache/Cypress
                  sudo chmod a+rw ${{ github.workspace }}/cache/Cypress
                  echo "CYPRESS_CACHE_FOLDER=${{ github.workspace }}/cache/Cypress" >> $GITHUB_ENV
                  echo "CYPRESS_CACHE_FOLDER=${{ github.workspace }}/cache/Cypress" >> $GITHUB_OUTPUT
            # Decode Keystore
            - name: Decode keystore
              env:
                  ENCODED_STRING: ${{ secrets.KEYSTORE }}
              run: |
                  echo $ENCODED_STRING | base64 -d > ${{ github.workspace }}/main.jks

            # NPM Cache
            - name: Set NodeJS Version # Set NodeJS Version
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
            - name: Get npm cache directory
              id: npm-cache-dir
              run: |
                  echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
            - uses: actions/cache@v3
              id: npm-cache
              with:
                  path: |
                      ${{ steps.npm-cache-dir.outputs.dir }}
                      ${{ runner.temp }}/cache/Cypress
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            # NPM CI Install
            - name: NPM CI Install
              run: npm ci
            # NPM Vite Build
            - name: NPM Vite Build
              run: npx vite build

            # Android Build
            - name: APK Ionic Build
              run: npx cap sync android
            # Generate Android App Bundle
            - name: Generate APK Bundle
              run: |
                  cd android
                  chmod +x ./gradlew
                  ./gradlew bundleRelease
                  ./gradlew assembleRelease
                  ./gradlew signingReport
              env:
                  SIGNING_STORE_FILE: ${{ github.workspace }}/main.jks
                  SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
                  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
                  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

            # Upload Android Build Artifacts
            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v3.1.2
              with:
                  name: apk-release
                  path: |
                      ${{ github.workspace }}/android/app/build/outputs/**/**/*.aab
                      ${{ github.workspace }}/android/app/build/outputs/**/**/*.apk
                  retention-days: 1
