name: Build App Container Image for Production (Android)

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-android-apps:
    name: Build Android Apps
    runs-on: ubuntu-latest
    env:
      ENV_BASE64: ${{ secrets.ENV_BASE64 }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create .env file
        if: env.ENV_BASE64 != ''
        run: echo "$ENV_BASE64" | base64 -d > .env
      - name: Update .env file
        if: env.ENV_BASE64 != ''
        run: echo "VITE_APP_VERSION=${{ github.ref_name }}" >> .env

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "19"
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Prepare Cypress cache dir
        run: |
          sudo mkdir -p ${{ github.workspace }}/cache/Cypress
          sudo chmod a+rw ${{ github.workspace }}/cache/Cypress
          echo "CYPRESS_CACHE_FOLDER=${{ github.workspace }}/cache/Cypress" >> $GITHUB_ENV
          echo "CYPRESS_CACHE_FOLDER=${{ github.workspace }}/cache/Cypress" >> $GITHUB_OUTPUT

      - name: Decode keystore
        env:
          DEBUG_ENCODED_STRING: ${{ vars.DEBUG_KEYSTORE }}
          ENCODED_STRING: ${{ secrets.KEYSTORE }}
        run: |
          echo $DEBUG_ENCODED_STRING | base64 -d > ${{ github.workspace }}/debug.keystore ;
          sudo mkdir -p /home/runner/.android ; sudo chmod a+rw -R /home/runner/.android ;
          sudo ln -sf ${{ github.workspace }}/debug.keystore /home/runner/.android/debug.keystore ;
          echo $ENCODED_STRING | base64 -d > ${{ github.workspace }}/main.jks

      - name: NPM Setup
        uses: bahmutov/npm-install@v1

      - name: NPM Build
        run: npx vite build

      - name: APK Ionic Build
        run: npx cap sync android

      - name: Generate APK Bundle
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew bundleRelease
          ./gradlew assembleRelease
          ./gradlew signingReport
        env:
          DEBUG_STORE_FILE: ${{ github.workspace }}/debug.keystore
          DEBUG_STORE_PASSWORD: ${{ vars.DEBUG_STORE_PASSWORD }}
          DEBUG_KEY_ALIAS: ${{ vars.DEBUG_KEY_ALIAS }}
          DEBUG_KEY_PASSWORD: ${{ vars.DEBUG_KEY_PASSWORD }}
          SIGNING_STORE_FILE: ${{ github.workspace }}/main.jks
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ vars.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Zip Android Build Artifacts
        run: |
          cd android/app/build/outputs
          zip -r ${{ github.workspace }}/android-apps-${{ github.run_id }}.zip ./apk ./bundle
          ls -lah ${{ github.workspace }}/android-apps-${{ github.run_id }}.zip

      - name: Upload Artifacts TO Google Drive
        uses: Jumbo810/Upload_Github_Artifacts_TO_GDrive@v2.2.2
        with:
          target: android-apps-${{ github.run_id }}.zip
          credentials: ${{ secrets.GDRIVE_SA_KEY }}
          parent_folder_id: ${{ secrets.GDRIVE_FOLDER_ID }}
