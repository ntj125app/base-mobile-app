name: Build App Container Image for Staging (Web)

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-web-app:
    name: Build Web Apps
    runs-on: ubuntu-latest
    env:
      ENV_BASE64: ${{ secrets.ENV_BASE64_DEV }}
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create .env file
        if: env.ENV_BASE64 != ''
        run: echo "$ENV_BASE64" | base64 -d > .env
      - name: Update .env file
        if: env.ENV_BASE64 != ''
        run: echo "VITE_APP_VERSION=${{ github.ref_name }}" >> .env

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: NPM Build
        run: pnpm dlx vite build

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get & Set Container Metadata
        id: meta-packages
        uses: docker/metadata-action@v5
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Clean Build App
        run: rm -rf node_modules public src tests android ios cypress .git .github .gitlab .gitattributes .gitignore .vscode .editorconfig .env .env.example .styleci.yml .eslintignore .eslintrc.js .stylelintrc.json package.json package-lock.json tsconfig.json tsconfig.node.json *.yaml *.md *.lock *.xml *.yml *.ts *.js *.html *.json
      - name: Build & Push Container
        uses: docker/build-push-action@v6
        if: env.REGISTRY != '' && env.IMAGE_NAME != ''
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-packages.outputs.tags }}
          labels: ${{ steps.meta-packages.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
