name: Build App Container Image for Staging (Android)

on:
    push:
        branches:
            - "main"
    workflow_dispatch:

jobs:
    build-android-apps:
        name: Build Android Apps
        runs-on: ubuntu-latest
        env:
            ENV_BASE64: ${{ secrets.ENV_BASE64_DEV }}
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Create .env file # Create .env file
              if: env.ENV_BASE64 != ''
              run: echo "$ENV_BASE64" | base64 -d > .env
            - name: Update .env file # Update .env file
              if: env.ENV_BASE64 != ''
              run: echo "VITE_APP_VERSION=${{ github.ref_name }}-${{ vars.BUILD_VERSION }}" >> .env

            - name: Setup Java
              uses: actions/setup-java@v3
              with:
                  distribution: "adopt"
                  java-version: "19"

            # Cypress prepare cache dir
            - name: Prepare Cypress cache dir
              run: |
                  sudo mkdir -p ${{ github.workspace }}/cache/Cypress
                  sudo chmod a+rw ${{ github.workspace }}/cache/Cypress
                  echo "CYPRESS_CACHE_FOLDER=${{ github.workspace }}/cache/Cypress" >> $GITHUB_ENV
                  echo "CYPRESS_CACHE_FOLDER=${{ github.workspace }}/cache/Cypress" >> $GITHUB_OUTPUT
            # Decode Keystore
            - name: Decode keystore
              env:
                  DEBUG_ENCODED_STRING: ${{ secrets.DEBUG_KEYSTORE }}
                  ENCODED_STRING: ${{ secrets.KEYSTORE }}
              run: |
                  echo $DEBUG_ENCODED_STRING | base64 -d > ${{ github.workspace }}/debug.keystore ;
                  sudo mkdir -p /home/runner/.android ; sudo chmod a+rw -R /home/runner/.android ;
                  sudo ln -sf ${{ github.workspace }}/debug.keystore /home/runner/.android/debug.keystore ;
                  echo $ENCODED_STRING | base64 -d > ${{ github.workspace }}/main.jks

            # NPM Cache
            - name: Set NodeJS Version # Set NodeJS Version
              uses: actions/setup-node@v3
              with:
                  node-version: "18"
            - name: Get npm cache directory
              id: npm-cache-dir
              run: |
                  echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
            - uses: actions/cache@v3
              id: npm-cache
              with:
                  path: |
                      ${{ steps.npm-cache-dir.outputs.dir }}
                      ${{ runner.temp }}/cache/Cypress
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            # NPM Global Install
            - name: Install NPM Packages
              run: npm install -g @ionic/cli native-run cordova-res @capacitor/core
            # NPM CI Install
            - name: NPM CI Install
              run: npm ci
            # NPM Vite Build
            - name: NPM Vite Build
              run: npx vite build

            # Android Build
            - name: APK Ionic Build
              run: npx cap sync android
            # Generate Android App Bundle
            - name: Setup Gradle
              uses: gradle/gradle-build-action@v2
            - name: Generate APK Bundle
              run: |
                  cd android
                  chmod +x ./gradlew
                  ./gradlew bundleDebug
                  ./gradlew assembleDebug
                  ./gradlew signingReport
              env:
                  DEBUG_STORE_FILE: ${{ github.workspace }}/debug.keystore
                  DEBUG_STORE_PASSWORD: ${{ secrets.DEBUG_STORE_PASSWORD }}
                  DEBUG_KEY_ALIAS: ${{ secrets.DEBUG_KEY_ALIAS }}
                  DEBUG_KEY_PASSWORD: ${{ secrets.DEBUG_KEY_PASSWORD }}
                  SIGNING_STORE_FILE: ${{ github.workspace }}/main.jks
                  SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
                  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
                  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

            # Zip Android Build Artifacts
            - name: Zip Android Build Artifacts
              run: |
                  cd android/app/build/outputs
                  zip -r ${{ github.workspace }}/android-dev-apps.zip ./apk ./bundle
                  ls -lah ${{ github.workspace }}/android-dev-apps.zip
            # Upload Zip Android Build Artifacts to Google Drive
            - name: Upload Artifacts TO Google Drive
              uses: Jumbo810/Upload_Github_Artifacts_TO_GDrive@v1.1.1
              with:
                target: android-dev-apps.zip
                credentials: ${{ secrets.GDRIVE_SA_KEY }}
                parent_folder_id: ${{ secrets.GDRIVE_FOLDER_ID }}
